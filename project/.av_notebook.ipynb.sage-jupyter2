{"backend_state":"init","connection_file":"/projects/f495fefc-ad07-40d7-85d0-0e5004b08281/.local/share/jupyter/runtime/kernel-35ee3473-714f-4c21-a5ed-bb0caa0589d7.json","kernel":"ds_env","kernel_error":"","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":0},"metadata":{"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.13"}},"trust":true,"type":"settings"}
{"cell_type":"code","exec_count":0,"id":"1dacbd","input":"","pos":10,"type":"cell"}
{"cell_type":"code","exec_count":1,"id":"6f537f","input":"import pandas as pd\nimport plotly.express as px","pos":0,"type":"cell"}
{"cell_type":"code","exec_count":10,"id":"d9f0d9","input":"x = cars_df['manufacturer_name'].value_counts()\n\ny=[]\nfor name in x.index:\n    y.append(cars_df[cars_df[\"manufacturer_name\"] == name]['price_usd'].mean())\n\nz={\n    \"Manufacturer Name\":x.index,\n    \"Average Price\":y\n}\navgPrice_df = pd.DataFrame(data=z)","pos":12,"type":"cell"}
{"cell_type":"code","exec_count":103,"id":"ed321c","input":"price_range = []\nfor price in cars_df[\"price_usd\"]:\n    if price <= 10000:\n        price_range.append(\"0-10k\")\n    elif price <=20000:\n        price_range.append(\"10k-20k\")\n    elif price <=30000:\n        price_range.append(\"20k-30k\")\n    elif price <=40000:\n        price_range.append(\"30k-40k\")\n    else:\n        price_range.append(\"40k-50k\")\n\ncars_df[\"price_range\"] = price_range","pos":16,"type":"cell"}
{"cell_type":"code","exec_count":109,"id":"89a99f","input":"hist_duration = px.histogram(cars_df, x=\"price_range\", y=\"duration_listed\")\nhist_duration.show()","output":{"0":{"data":{"iframe":"eb8cc278d2b4c792767892a79dff4a5329184fd6"},"exec_count":109,"output_type":"execute_result"}},"pos":17,"type":"cell"}
{"cell_type":"code","exec_count":11,"id":"3ade85","input":"avgPrice_df.info()","output":{"0":{"name":"stdout","output_type":"stream","text":"<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 55 entries, 0 to 54\nData columns (total 2 columns):\n #   Column             Non-Null Count  Dtype  \n---  ------             --------------  -----  \n 0   Manufacturer Name  55 non-null     object \n 1   Average Price      55 non-null     float64\ndtypes: float64(1), object(1)\nmemory usage: 1008.0+ bytes\n"}},"pos":13,"type":"cell"}
{"cell_type":"code","exec_count":116,"id":"1bd66c","input":"percent_df = pd.DataFrame(columns=[\"Manufacturer Name\", \"Minsk Region\", \"Gomel Region\", \"Vitebsk Region\", \"Brest Region\", \"Mogilev Region\", \"Hrodna Region\"])\n# percent_df = pd.DataFrame(columns=avgPrice_df[\"Manufacturer Name\"])\n\nmaxPrice_df = avgPrice_df[\"Manufacturer Name\"].tail(10)\n\nfor i in range(10):\n    car = maxPrice_df.iloc[i]\n    loclist = [car]\n    j = 0\n    for loc in locx:\n        num = len(cars_df[(cars_df[\"manufacturer_name\"] == car) & (cars_df[\"location_region\"] == loc)].index)\n        num /= locs.iloc[j]\n        num *= 100\n        loclist.append(num)\n        j += 1\n    percent_df.loc[i] = loclist\n\npercent_df.head()\n# j = 0\n# for loc in locx:\n#     loclist = []\n#     for i in range(len(avgPrice_df.index)):\n#         car = avgPrice_df[\"Manufacturer Name\"].iloc[i]\n#         num = len(cars_df[(cars_df[\"manufacturer_name\"] == car) & (cars_df[\"location_region\"] == loc)].index)\n#         num /= locs.iloc[j]\n#         num *= 100\n#         loclist.append(num)\n#     j += 1\n#     percent_df.loc[loc] = loclist","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Manufacturer Name</th>\n      <th>Minsk Region</th>\n      <th>Gomel Region</th>\n      <th>Vitebsk Region</th>\n      <th>Brest Region</th>\n      <th>Mogilev Region</th>\n      <th>Hrodna Region</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Cadillac</td>\n      <td>0.107305</td>\n      <td>0.127389</td>\n      <td>0.066511</td>\n      <td>0.033434</td>\n      <td>0.186706</td>\n      <td>0.201207</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Acura</td>\n      <td>0.235246</td>\n      <td>0.031847</td>\n      <td>0.066511</td>\n      <td>0.133735</td>\n      <td>0.037341</td>\n      <td>0.040241</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Buick</td>\n      <td>0.165085</td>\n      <td>0.031847</td>\n      <td>0.033256</td>\n      <td>0.167168</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Mini</td>\n      <td>0.231118</td>\n      <td>0.191083</td>\n      <td>0.099767</td>\n      <td>0.033434</td>\n      <td>0.074683</td>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Infiniti</td>\n      <td>0.466364</td>\n      <td>0.445860</td>\n      <td>0.299302</td>\n      <td>0.300903</td>\n      <td>0.336072</td>\n      <td>0.321932</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"  Manufacturer Name  Minsk Region  Gomel Region  Vitebsk Region  Brest Region  \\\n0          Cadillac      0.107305      0.127389        0.066511      0.033434   \n1             Acura      0.235246      0.031847        0.066511      0.133735   \n2             Buick      0.165085      0.031847        0.033256      0.167168   \n3              Mini      0.231118      0.191083        0.099767      0.033434   \n4          Infiniti      0.466364      0.445860        0.299302      0.300903   \n\n   Mogilev Region  Hrodna Region  \n0        0.186706       0.201207  \n1        0.037341       0.040241  \n2        0.000000       0.000000  \n3        0.074683       0.000000  \n4        0.336072       0.321932  "},"exec_count":116,"output_type":"execute_result"}},"pos":26,"type":"cell"}
{"cell_type":"code","exec_count":12,"id":"d93a23","input":"avgPrice_df.sort_values(by=\"Average Price\", ascending=True, inplace=True)","pos":14,"type":"cell"}
{"cell_type":"code","exec_count":121,"id":"d31413","input":"percent_df.head(5)","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Manufacturer Name</th>\n      <th>Minsk Region</th>\n      <th>Gomel Region</th>\n      <th>Vitebsk Region</th>\n      <th>Brest Region</th>\n      <th>Mogilev Region</th>\n      <th>Hrodna Region</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Cadillac</td>\n      <td>0.107305</td>\n      <td>0.127389</td>\n      <td>0.066511</td>\n      <td>0.033434</td>\n      <td>0.186706</td>\n      <td>0.201207</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Acura</td>\n      <td>0.235246</td>\n      <td>0.031847</td>\n      <td>0.066511</td>\n      <td>0.133735</td>\n      <td>0.037341</td>\n      <td>0.040241</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Buick</td>\n      <td>0.165085</td>\n      <td>0.031847</td>\n      <td>0.033256</td>\n      <td>0.167168</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Mini</td>\n      <td>0.231118</td>\n      <td>0.191083</td>\n      <td>0.099767</td>\n      <td>0.033434</td>\n      <td>0.074683</td>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Infiniti</td>\n      <td>0.466364</td>\n      <td>0.445860</td>\n      <td>0.299302</td>\n      <td>0.300903</td>\n      <td>0.336072</td>\n      <td>0.321932</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"  Manufacturer Name  Minsk Region  Gomel Region  Vitebsk Region  Brest Region  \\\n0          Cadillac      0.107305      0.127389        0.066511      0.033434   \n1             Acura      0.235246      0.031847        0.066511      0.133735   \n2             Buick      0.165085      0.031847        0.033256      0.167168   \n3              Mini      0.231118      0.191083        0.099767      0.033434   \n4          Infiniti      0.466364      0.445860        0.299302      0.300903   \n\n   Mogilev Region  Hrodna Region  \n0        0.186706       0.201207  \n1        0.037341       0.040241  \n2        0.000000       0.000000  \n3        0.074683       0.000000  \n4        0.336072       0.321932  "},"exec_count":121,"output_type":"execute_result"}},"pos":28,"type":"cell"}
{"cell_type":"code","exec_count":137,"id":"b0ec4c","input":"car_colors = {'Cadillac':'red', 'Acura':'yellow', 'Buick':'blue', 'Mini':'orange', 'Infiniti':'green', 'Skoda':'purple', 'Land Rover':'grey',\n       'Lexus':'pink', 'Jaguar':'white', 'Porsche':'black'}\n\nfig_carlocs = make_subplots(rows=3, cols=2,\n                           subplot_titles=(\"Minsk Region\", \"Gomel Region\", \"Vitebsk Region\", \"Brest Region\", \"Mogilev Region\", \"Hrodna Region\"),)\n\ndef mapColors():\n    colors = []\n    for i in range(10):\n        colors.append(car_colors[percent_df[\"Manufacturer Name\"].iloc[i]])\n    return colors\n\ntrace0 = go.Bar(x=percent_df[\"Minsk Region\"], marker=dict(color = mapColors()), text=percent_df[\"Manufacturer Name\"])\ntrace1 = go.Bar(x=percent_df[\"Gomel Region\"], marker=dict(color = mapColors()), text=percent_df[\"Manufacturer Name\"])\ntrace2 = go.Bar(x=percent_df[\"Vitebsk Region\"], marker=dict(color = mapColors()), text=percent_df[\"Manufacturer Name\"])\ntrace3 = go.Bar(x=percent_df[\"Brest Region\"], marker=dict(color = mapColors()), text=percent_df[\"Manufacturer Name\"])\ntrace4 = go.Bar(x=percent_df[\"Mogilev Region\"], marker=dict(color = mapColors()), text=percent_df[\"Manufacturer Name\"])\ntrace5 = go.Bar(x=percent_df[\"Hrodna Region\"], marker=dict(color = mapColors()), text=percent_df[\"Manufacturer Name\"])\n\nfig_carlocs.append_trace(trace0, 1, 1)\nfig_carlocs.append_trace(trace1, 1, 2)\nfig_carlocs.append_trace(trace2, 2, 1)\nfig_carlocs.append_trace(trace3, 2, 2)\nfig_carlocs.append_trace(trace4, 3, 1)\nfig_carlocs.append_trace(trace5, 3, 2)\n\n\nfig_carlocs.show()\n\n# in order on each graph from bottom to top:\n# Cadillac, Acura, Buick, Mini, Infiniti, Skoda, Land Rover, Lexus, Jaguar, Porsche\n# (need to find way to label/rescale graph)\n\n# hist_carlocs = px.bar(percent_df, x=\"Minsk Region\", orientation=\"h\", color_discrete_map=car_colors)\n# hist_carlocs.show()","output":{"0":{"data":{"iframe":"51e23fe26ffdc42d853378bc1a72bb4ae490843e"},"exec_count":137,"output_type":"execute_result"}},"pos":29,"type":"cell"}
{"cell_type":"code","exec_count":138,"id":"05a930","input":"box_color = px.box(cars_df, x=\"color\", y=\"price_usd\",\n                labels={\n                    \"color\":\"Color\",\n                    \"price_usd\":\"Price (USD)\"\n                },\n                  title=\"Color of car vs. Price\")\nbox_color.show()","output":{"0":{"data":{"iframe":"9def48767d251838bd77875706541b320ecdf0c0"},"exec_count":138,"output_type":"execute_result"}},"pos":19,"type":"cell"}
{"cell_type":"code","exec_count":16,"id":"7cbd96","input":"","pos":20,"type":"cell"}
{"cell_type":"code","exec_count":17,"id":"c6997e","input":"locs = cars_df[\"location_region\"].value_counts()\nlocx = locs.index\nlocy = []\nfor location in locx:\n    mean = cars_df[cars_df[\"location_region\"] == location][\"price_usd\"].mean()\n    locy.append(mean)","pos":21,"type":"cell"}
{"cell_type":"code","exec_count":2,"id":"1eb958","input":"cars_df = pd.read_csv('data/car_data.csv')","pos":1,"type":"cell"}
{"cell_type":"code","exec_count":20,"id":"2d59c1","input":"# maxPrice_df = avgPrice_df[\"Manufacturer Name\"].tail(10)\n\n# cars_to_keep = []\n# for car in range(10):\n#     cars_to_keep.append(maxPrice_df.iloc[car])\n\n# hist_maxCars = px.histogram(cars_df[cars_df[\"manufacturer_name\"].isin(cars_to_keep)], x=\"manufacturer_name\", color=\"location_region\")\n# hist_maxCars.update_layout(width=750)\n# hist_maxCars.show()","pos":30,"type":"cell"}
{"cell_type":"code","exec_count":21,"id":"51b143","input":"sc_yeardrive = px.scatter(cars_df, x=\"year_produced\", y=\"price_usd\", facet_row=\"transmission\", color=\"drivetrain\",\n                         labels={\n                             \"price_usd\":\"Price (USD)\",\n                             \"year_produced\":\"Year Produced\",\n                             \"drivetrain\":\"Drivetrain\"\n                         },\n                         title=\"Year produced vs. Price\")\nsc_yeardrive.update_layout(height=500, width=750)\nsc_yeardrive.show()","output":{"0":{"data":{"iframe":"142304e122dc26e1e14e5faaaeae05d8c4da1577"}}},"pos":32,"type":"cell"}
{"cell_type":"code","exec_count":22,"id":"83afd6","input":"sc_mileage = px.scatter(cars_df, x=\"odometer_value\", y=\"price_usd\", color=\"year_produced\")\nsc_mileage.update_layout(height=500, width=750)\nsc_mileage.show()","output":{"0":{"data":{"iframe":"d24bc46c8772376582b3e25eb2d0c6c57e18ea72"}}},"pos":33,"type":"cell"}
{"cell_type":"code","exec_count":23,"id":"f8660f","input":"box_engine = px.box(cars_df, x=\"body_type\", y=\"price_usd\", color=\"engine_type\",\n                   labels={\n                       \"body_type\":\"Body Type\",\n                       \"engine_type\":\"Engine Type\",\n                       \"price_usd\":\"Price (USD)\"\n                   }, title=\"Body and engine type vs. Price\")\n\n\nbox_engine.show()","output":{"0":{"data":{"iframe":"6a3c5ce25e9ca72b682c1d24587cfe2638d43ab1"}}},"pos":34,"type":"cell"}
{"cell_type":"code","exec_count":24,"id":"2f4cf0","input":"# x=cars_df[\"location_region\"].value_counts()","output":{"0":{"data":{"text/plain":"Minsk Region      24230\nGomel Region       3140\nVitebsk Region     3007\nBrest Region       2991\nMogilev Region     2678\nHrodna Region      2485\nName: location_region, dtype: int64"},"exec_count":24,"output_type":"execute_result"}},"pos":25,"type":"cell"}
{"cell_type":"code","exec_count":25,"id":"637f9a","input":"\n","pos":9,"type":"cell"}
{"cell_type":"code","exec_count":28,"id":"4545ff","input":"box_manufacturer = px.bar(avgPrice_df, x=\"Manufacturer Name\", y=\"Average Price\")\nbox_manufacturer.update_layout(\n    width=1200\n)\n\nbox_manufacturer.show()","output":{"0":{"data":{"iframe":"9d4e99c700357cf0437585f1028fabb3723295fc"}}},"pos":15,"type":"cell"}
{"cell_type":"code","exec_count":3,"id":"e060fd","input":"cars_df.drop([\n        \"engine_fuel\",\n        \"feature_0\",\n        \"feature_1\",\n        \"feature_2\",\n        \"feature_3\",\n        \"feature_4\",\n        \"feature_5\",\n        \"feature_6\",\n        \"feature_7\",\n        \"feature_8\",\n        \"feature_9\"\n    ], axis=1, inplace=True)","pos":2,"type":"cell"}
{"cell_type":"code","exec_count":4,"id":"f0b928","input":"cars_df[\"location_region\"].replace({\n        \"Минская обл.\":\"Minsk Region\",\n        \"Гомельская обл.\":\"Gomel Region\",\n        \"Витебская обл.\":\"Vitebsk Region\",\n        \"Брестская обл.\":\"Brest Region\",\n        \"Могилевская обл.\":\"Mogilev Region\",\n        \"Гродненская обл.\":\"Hrodna Region\"\n    }, inplace=True)\n","pos":3,"type":"cell"}
{"cell_type":"code","exec_count":40,"id":"9bbfa0","input":"hist_location = px.histogram(x=locx, y=locy,\n                            labels={\n                                \"x\":\"Regions\"\n                            },\n                             title=\"---\")\nhist_location.update_layout(height=500, width=750, yaxis_title=\"Average Price\")\nhist_location.show()","output":{"0":{"data":{"iframe":"042c11918134d64c593128b401054a5712aedf40"}}},"pos":22,"type":"cell"}
{"cell_type":"code","exec_count":48,"id":"65ac8d","input":"cars_df[\"location_region\"].value_counts()[:]","output":{"0":{"data":{"text/plain":"Minsk Region      24230\nGomel Region       3140\nVitebsk Region     3007\nBrest Region       2991\nMogilev Region     2678\nHrodna Region      2485\nName: location_region, dtype: int64"},"exec_count":48,"output_type":"execute_result"}},"pos":23,"type":"cell"}
{"cell_type":"code","exec_count":5,"id":"e3ed1b","input":"cars_df.info()","output":{"0":{"name":"stdout","output_type":"stream","text":"<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 38531 entries, 0 to 38530\nData columns (total 19 columns):\n #   Column             Non-Null Count  Dtype  \n---  ------             --------------  -----  \n 0   manufacturer_name  38531 non-null  object \n 1   model_name         38531 non-null  object \n 2   transmission       38531 non-null  object \n 3   color              38531 non-null  object \n 4   odometer_value     38531 non-null  int64  \n 5   year_produced      38531 non-null  int64  \n 6   engine_has_gas     38531 non-null  bool   \n 7   engine_type        38531 non-null  object \n 8   engine_capacity    38521 non-null  float64\n 9   body_type          38531 non-null  object \n 10  has_warranty       38531 non-null  bool   \n 11  state              38531 non-null  object \n 12  drivetrain         38531 non-null  object \n 13  price_usd          38531 non-null  float64\n 14  is_exchangeable    38531 non-null  bool   \n 15  location_region    38531 non-null  object \n 16  number_of_photos   38531 non-null  int64  \n 17  up_counter         38531 non-null  int64  \n 18  duration_listed    38531 non-null  int64  \ndtypes: bool(3), float64(2), int64(5), object(9)\nmemory usage: 4.8+ MB\n"}},"pos":4,"type":"cell"}
{"cell_type":"code","exec_count":50,"id":"b54155","input":"hist_location = px.histogram(x=locx, y=locs,\n                            labels={\n                                \"x\":\"Regions\"\n                            },\n                             title=\"Number of Cars \")\nhist_location.update_layout(height=500, width=750, yaxis_title=\"Number of Cars\")\nhist_location.show()","output":{"0":{"data":{"iframe":"d8eb301157b80123a21bf11c009d59ab10490693"}}},"pos":24,"type":"cell"}
{"cell_type":"code","exec_count":6,"id":"370e66","input":"cars_df[\"model_name\"].value_counts()","output":{"0":{"data":{"text/plain":"Passat    1423\nAstra      751\nGolf       707\nA6         687\nMondeo     637\n          ... \nC1500        1\nAlero        1\nImpala       1\n360          1\nAspen        1\nName: model_name, Length: 1118, dtype: int64"},"exec_count":6,"output_type":"execute_result"}},"pos":5,"type":"cell"}
{"cell_type":"code","exec_count":7,"id":"c4e1ef","input":"#fig = px.scatter(cars_df, x=\"price_usd\", y=\"duration_listed\", color=\"has_warranty\")\n#fig.update_layout(height = 500,width = 1500)\n#fig.show()","pos":7,"type":"cell"}
{"cell_type":"code","exec_count":84,"id":"70039b","input":"import plotly.graph_objects as go\nfrom plotly.subplots import make_subplots","pos":27,"type":"cell"}
{"cell_type":"code","exec_count":9,"id":"5e4c53","input":"","pos":11,"type":"cell"}
{"cell_type":"markdown","id":"269fa2","input":"# Do factors that don't affect the car's performance affect the price?\n\n","pos":18,"type":"cell"}
{"cell_type":"markdown","id":"3f6c17","input":"# Does the price affect the duration listed?\n\n","pos":6,"type":"cell"}
{"cell_type":"markdown","id":"4bdd21","input":"# Does the manufacturer name affect the price?\n\n","pos":8,"type":"cell"}
{"cell_type":"markdown","id":"644b4c","input":"- Do factors that do/don't affect the car's performance \\(like mileage vs. color\\) affect its price?\n- Are the more expensive cars all at a certain location?\n\n","pos":36,"type":"cell"}
{"cell_type":"markdown","id":"d8b1ed","input":"# Factors that do affect the car?\n\n","pos":31,"type":"cell"}
{"cell_type":"markdown","id":"e04895","input":"- Does the price affect duration listed\n- Does the manufacturer name affect the price\n\n","pos":35,"type":"cell"}
{"id":0,"time":1656644073866,"type":"user"}
{"last_load":1656643551402,"type":"file"}