{"backend_state":"init","connection_file":"/projects/f495fefc-ad07-40d7-85d0-0e5004b08281/.local/share/jupyter/runtime/kernel-dd2ea5f9-3ef8-4403-a290-cd7253b032fd.json","kernel":"ds_env","kernel_error":"","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":0},"trust":true,"type":"settings"}
{"cell_type":"code","exec_count":0,"id":"0fdf89","input":"","pos":15,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"32bd3d","input":"x = car_df['manufacturer_name'].value_counts()\ny=[]\nfor name in x.index:\n    y.append(car_df[car_df[\"manufacturer_name\"] == name]['duration_listed'].mean())\nz={\n    \"Manufacturer Name\":x.index,\n    \"Average Time(Days)\":y\n}\navgPrice_df = pd.DataFrame(data=z)\navgPrice_df.sort_values(by=\"Average Time(Days)\", ascending=True, inplace=True)\nbox_manufacturer = px.bar(avgPrice_df, x=\"Manufacturer Name\", y=\"Average Time(Days)\")\nbox_manufacturer.update_layout(\n    title = 'Manufacturer Name VS Average Duration Before Car Sold',\n    width=1100\n)\n\nbox_manufacturer.show()","pos":11,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"3deb1b","input":"","pos":16,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"74ef2c","input":"x = car_df['body_type'].value_counts()\ny=[]\nfor name in x.index:\n    y.append(car_df[car_df[\"body_type\"] == name]['duration_listed'].mean())\nz={\n    \"Body Type\":x.index,\n    \"Average Time(Days)\":y\n}\navgPrice_df = pd.DataFrame(data=z)\n#avgPrice_df.sort_values(by=\"Average Time(Days)\", ascending=True, inplace=True)\nbox_manufacturer = px.bar(avgPrice_df, x=\"Body Type\", y=\"Average Time(Days)\", color=\"Body Type\")\nbox_manufacturer.update_layout(\n    title = 'Body Type VS Average Duration Before Car Sold',\n    width=500\n)\n\nbox_manufacturer.show()","pos":12,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"774de9","input":"#scatter plot graphs","pos":7,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"890bc5","input":"y=[]\n\nfor i in car_df[\"price_usd\"]:\n    if(i<=10000):\n        y.append(\"0-10K\")\n    elif(i<=20000):\n        y.append(\"10K-20K\")\n    elif(i<=30000):\n        y.append(\"20K-30K\")\n    elif(i<=40000):\n        y.append(\"30K-40K\")\n    elif(i<=50000):\n        y.append(\"40K-50K\")\n\nz={\n    \"Price(USD)\":y,\n    \"Time(Days)\":car_df['duration_listed'],\n    \"Price($)\":car_df['price_usd']\n}\navgPrice_df = pd.DataFrame(data=z)\navgPrice_df.sort_values(by=\"Price(USD)\", ascending=True, inplace=True)\nbox_manufacturer = px.scatter(avgPrice_df, x=\"Price(USD)\", y=\"Time(Days)\", color = \"Price($)\")\n\nbox_manufacturer.update_layout(\n    width = 475,\n    title = 'Price VS Duration Before Car Sold'\n)\nbox_manufacturer.show()\n","pos":8,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"9c49a6","input":"car_df['transmission'].value_counts()","pos":5,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"9de04b","input":"x = car_df['color'].value_counts()\ny=[]\nfor name in x.index:\n    y.append(car_df[car_df[\"color\"] == name]['duration_listed'].mean())\nz={\n    \"Color\":x.index,\n    \"Average Time(Days)\":y\n}\navgPrice_df = pd.DataFrame(data=z)\navgPrice_df.sort_values(by=\"Average Time(Days)\", ascending=False, inplace=True)\nbox_manufacturer = px.bar(avgPrice_df, x=\"Color\", y=\"Average Time(Days)\", color='Color',color_discrete_map={'orange':'orange', 'yellow':'yellow', 'white':'white', 'black':'black', 'violet':'purple', 'silver':'lightslategrey', 'other':'violet',\n       'blue':'blue', 'green':'green', 'grey':'grey', 'red':'red', 'brown':'saddlebrown'})\nbox_manufacturer.update_layout(\n    title = 'Color VS Average Duration Before Car Sold',\n    width=800\n)\n\nbox_manufacturer.show()","pos":14,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"9f39ab","input":"car_df.head(1)","pos":3,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"acbf6e","input":"import pandas as pd\nimport plotly.express as px\n\n\n#reading the data file\ncar_df = pd.read_csv(\"data/car_data.csv\")\n\n#Make a list of what you want to drop\ncolumns_to_drop = ['feature_0', 'feature_1', 'feature_2',\n       'feature_3', 'feature_4', 'feature_5', 'feature_6', 'feature_7',\n       'feature_8', 'feature_9', 'engine_fuel', 'up_counter']\n\n#Drop the columns using drop()\ncar_df.drop(columns_to_drop, axis=1, inplace = True) #axis = 1 lets pandas know we are dropping columns, not rows.\n\n#replacing russian with english\ncar_df[\"location_region\"].replace({\"Минская обл.\":\"Minsk\",\"Гомельская обл.\":\"Gomel\", \"Витебская обл.\":\"Vitebsk\", \"Брестская обл.\":\"Brest\", \"Могилевская обл.\":\"Mogilev\", \"Гродненская обл.\":\"Grodno\"}, inplace=True)","pos":0,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"b2eee7","input":"k=[]\n\nfor i in car_df[\"odometer_value\"]:\n    if(i<=200000):\n        k.append(\"0-200K\")\n    elif(i<=400000):\n        k.append(\"200K-400K\")\n    elif(i<=600000):\n        k.append(\"400K-600K\")\n    elif(i<=800000):\n        k.append(\"600K-800K\")\n    elif(i<=1000000):\n        k.append(\"800K-1000K\")\n\nz={\n    \"Odometer(Kilometers)\":k,\n    \"Time(Days)\":car_df['duration_listed'],\n    \"Odometer(KM)\":car_df['odometer_value']\n}\navgPrice_df = pd.DataFrame(data=z)\navgPrice_df.sort_values(by=\"Odometer(KM)\", ascending=True, inplace=True)\nbox_manufacturer = px.scatter(avgPrice_df, x=\"Odometer(Kilometers)\", y=\"Time(Days)\", color = \"Odometer(KM)\")\n\nbox_manufacturer.update_layout(\n    width = 600,\n    title = 'Odometer VS Duration Before Car Sold'\n)\nbox_manufacturer.show()\n","pos":9,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"ce419e","input":"car_df[\"engine_type\"].value_counts().plot.pie()","pos":6,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"d76972","input":"x = car_df['engine_type'].value_counts()\ny=[]\nfor name in x.index:\n    y.append(car_df[car_df[\"engine_type\"] == name]['duration_listed'].mean())\nz={\n    \"Engine Type\":x.index,\n    \"Average Time(Days)\":y\n}\navgPrice_df = pd.DataFrame(data=z)\navgPrice_df.sort_values(by=\"Average Time(Days)\", ascending=True, inplace=True)\nbox_manufacturer = px.bar(avgPrice_df, x=\"Engine Type\", y=\"Average Time(Days)\")\nbox_manufacturer.update_layout(\n    title = 'Engine Type VS Average Duration Before Car Sold',\n    width=500\n)\n\nbox_manufacturer.show()","pos":13,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"e7a270","input":"car_df.columns","pos":2,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"eb6001","input":"car_df.info()","pos":1,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"f877ad","input":"car_df['manufacturer_name'].value_counts()","pos":4,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"fed2dc","input":"sc_yeardrive = px.scatter(car_df, x=\"year_produced\", y=\"duration_listed\",facet_row=\"transmission\", facet_col=\"drivetrain\", labels={\n                             \"year_produced\":\"Year Produced\",\n                             \"duration_listed\":\"Duration Listed(Days)\",\n                             \"transmission\":\"Transmission\",\n                             \"drivetrain\":\"Drivetrain\"\n                         })\n\nsc_yeardrive.update_layout(\n        width=1000,\n        title = 'Duration Before Car Sold VS Car Specifications'\n)\n\nsc_yeardrive.show()","pos":10,"type":"cell"}
{"id":0,"time":1656659832259,"type":"user"}
{"last_load":1656659832167,"type":"file"}