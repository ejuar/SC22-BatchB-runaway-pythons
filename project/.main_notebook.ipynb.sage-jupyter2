{"backend_state":"running","connection_file":"/projects/f495fefc-ad07-40d7-85d0-0e5004b08281/.local/share/jupyter/runtime/kernel-dfab64f5-5c03-4667-8a1a-192d86cf2b1a.json","kernel":"ds_env","kernel_error":"","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":0},"metadata":{"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.13"}},"trust":true,"type":"settings"}
{"cell_type":"code","end":1656655655448,"exec_count":25,"id":"8ed905","input":"sc_yeardrive = px.box(cars_df, x=\"duration_listed\", y=\"drivetrain\", color=\"transmission\", range_x=[0,240], points='suspectedoutliers', notched=True)\n\nsc_yeardrive.update_layout(\n        width=1000\n)\n\nsc_yeardrive.show()","kernel":"ds_env","output":{"0":{"data":{"iframe":"a5ba4a571c375c375aacbbe02a44c00bf1f2fadf"}}},"pos":16,"start":1656655655285,"state":"done","type":"cell"}
{"cell_type":"code","end":1656655720787,"exec_count":27,"id":"a4839e","input":"import pandas as pd\nimport plotly.express as px\nimport plotly.graph_objects as go\nfrom plotly.subplots import make_subplots","kernel":"ds_env","pos":0,"start":1656655720779,"state":"done","type":"cell"}
{"cell_type":"code","end":1656655722179,"exec_count":28,"id":"b44ddc","input":"cars_df = pd.read_csv('data/car_data.csv')","kernel":"ds_env","pos":1,"start":1656655721920,"state":"done","type":"cell"}
{"cell_type":"code","end":1656655728380,"exec_count":29,"id":"ef46b5","input":"cars_df.head(5)","kernel":"ds_env","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>manufacturer_name</th>\n      <th>model_name</th>\n      <th>transmission</th>\n      <th>color</th>\n      <th>odometer_value</th>\n      <th>year_produced</th>\n      <th>engine_fuel</th>\n      <th>engine_has_gas</th>\n      <th>engine_type</th>\n      <th>engine_capacity</th>\n      <th>...</th>\n      <th>feature_1</th>\n      <th>feature_2</th>\n      <th>feature_3</th>\n      <th>feature_4</th>\n      <th>feature_5</th>\n      <th>feature_6</th>\n      <th>feature_7</th>\n      <th>feature_8</th>\n      <th>feature_9</th>\n      <th>duration_listed</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Subaru</td>\n      <td>Outback</td>\n      <td>automatic</td>\n      <td>silver</td>\n      <td>190000</td>\n      <td>2010</td>\n      <td>gasoline</td>\n      <td>False</td>\n      <td>gasoline</td>\n      <td>2.5</td>\n      <td>...</td>\n      <td>True</td>\n      <td>True</td>\n      <td>True</td>\n      <td>False</td>\n      <td>True</td>\n      <td>False</td>\n      <td>True</td>\n      <td>True</td>\n      <td>True</td>\n      <td>16</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Subaru</td>\n      <td>Outback</td>\n      <td>automatic</td>\n      <td>blue</td>\n      <td>290000</td>\n      <td>2002</td>\n      <td>gasoline</td>\n      <td>False</td>\n      <td>gasoline</td>\n      <td>3.0</td>\n      <td>...</td>\n      <td>True</td>\n      <td>False</td>\n      <td>False</td>\n      <td>True</td>\n      <td>True</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>True</td>\n      <td>83</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Subaru</td>\n      <td>Forester</td>\n      <td>automatic</td>\n      <td>red</td>\n      <td>402000</td>\n      <td>2001</td>\n      <td>gasoline</td>\n      <td>False</td>\n      <td>gasoline</td>\n      <td>2.5</td>\n      <td>...</td>\n      <td>True</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>True</td>\n      <td>True</td>\n      <td>151</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Subaru</td>\n      <td>Impreza</td>\n      <td>mechanical</td>\n      <td>blue</td>\n      <td>10000</td>\n      <td>1999</td>\n      <td>gasoline</td>\n      <td>False</td>\n      <td>gasoline</td>\n      <td>3.0</td>\n      <td>...</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>86</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Subaru</td>\n      <td>Legacy</td>\n      <td>automatic</td>\n      <td>black</td>\n      <td>280000</td>\n      <td>2001</td>\n      <td>gasoline</td>\n      <td>False</td>\n      <td>gasoline</td>\n      <td>2.5</td>\n      <td>...</td>\n      <td>True</td>\n      <td>False</td>\n      <td>True</td>\n      <td>True</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>True</td>\n      <td>7</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows × 30 columns</p>\n</div>","text/plain":"  manufacturer_name model_name transmission   color  odometer_value  \\\n0            Subaru    Outback    automatic  silver          190000   \n1            Subaru    Outback    automatic    blue          290000   \n2            Subaru   Forester    automatic     red          402000   \n3            Subaru    Impreza   mechanical    blue           10000   \n4            Subaru     Legacy    automatic   black          280000   \n\n   year_produced engine_fuel  engine_has_gas engine_type  engine_capacity  \\\n0           2010    gasoline           False    gasoline              2.5   \n1           2002    gasoline           False    gasoline              3.0   \n2           2001    gasoline           False    gasoline              2.5   \n3           1999    gasoline           False    gasoline              3.0   \n4           2001    gasoline           False    gasoline              2.5   \n\n   ... feature_1  feature_2 feature_3 feature_4  feature_5  feature_6  \\\n0  ...      True       True      True     False       True      False   \n1  ...      True      False     False      True       True      False   \n2  ...      True      False     False     False      False      False   \n3  ...     False      False     False     False      False      False   \n4  ...      True      False      True      True      False      False   \n\n  feature_7  feature_8  feature_9  duration_listed  \n0      True       True       True               16  \n1     False      False       True               83  \n2     False       True       True              151  \n3     False      False      False               86  \n4     False      False       True                7  \n\n[5 rows x 30 columns]"},"exec_count":29}},"pos":2,"start":1656655728350,"state":"done","type":"cell"}
{"cell_type":"code","end":1656655734443,"exec_count":30,"id":"2e6a15","input":"#List of columns to drop\ncolumns_to_drop = ['feature_0', 'feature_1', 'feature_2',\n       'feature_3', 'feature_4', 'feature_5', 'feature_6', 'feature_7',\n       'feature_8', 'feature_9', 'engine_fuel', 'up_counter']\n\n#Columns are dropped\ncars_df.drop(columns_to_drop, axis=1, inplace = True) #axis = 1 lets pandas know we are dropping columns, not rows.\n\n#Translating russian to english\ncars_df[\"location_region\"].replace({\"Минская обл.\":\"Minsk\",\"Гомельская обл.\":\"Gomel\", \"Витебская обл.\":\"Vitebsk\", \"Брестская обл.\":\"Brest\", \"Могилевская обл.\":\"Mogilev\", \"Гродненская обл.\":\"Grodno\"}, inplace=True)","kernel":"ds_env","pos":3,"start":1656655734412,"state":"done","type":"cell"}
{"cell_type":"code","end":1656656624520,"exec_count":43,"id":"9bf38a","input":"x = cars_df['manufacturer_name'].value_counts()\n\ny=[]\nfor name in x.index:\n    y.append(cars_df[cars_df[\"manufacturer_name\"] == name]['price_usd'].mean())\n\nz={\n    \"Manufacturer Name\":x.index,\n    \"Average Price($)\":y\n}\navgPrice_df = pd.DataFrame(data=z)\n\navgPrice_df.sort_values(by=\"Average Price($)\", ascending=True, inplace=True)\n\nbox_manufacturer = px.bar(avgPrice_df, x=\"Manufacturer Name\", y=\"Average Price($)\")\nbox_manufacturer.update_layout(\n    title=\"Average Price of Each Manufacturer's Car\",\n    width=1200\n)\n\nbox_manufacturer.show()","kernel":"ds_env","output":{"0":{"data":{"iframe":"5a8269ff1dd9869d607db7d479e7b29be44adecf"}}},"pos":19,"start":1656656623922,"state":"done","type":"cell"}
{"cell_type":"code","end":1656656731217,"exec_count":46,"id":"d7c28d","input":"sc_yeardrive = px.scatter(cars_df, x=\"year_produced\", y=\"price_usd\", color=\"drivetrain\", facet_col =\"transmission\",\n                         labels={\n                             \"price_usd\":\"Price (USD)\",\n                             \"year_produced\":\"Year Produced\",\n                             \"drivetrain\":\"Drivetrain\"\n                         },\n                         title=\"Year produced vs. Price\", marginal_x='histogram')\nsc_yeardrive.update_layout(height=500, width=750)\nsc_yeardrive.show()","kernel":"ds_env","output":{"0":{"data":{"iframe":"8cad36ce57845e35efdf087745ec22bc36eff2a6"}}},"pos":27,"start":1656656730793,"state":"done","type":"cell"}
{"cell_type":"code","end":1656658897155,"exec_count":78,"id":"e861a8","input":"locs = cars_df[\"location_region\"].value_counts()\nlocx = locs.index\nlocy = []\nfor location in locx:\n    mean = cars_df[cars_df[\"location_region\"] == location][\"price_usd\"].mean()\n    locy.append(mean)\n\npercent_df = pd.DataFrame(columns=[\"Manufacturer Name\", \"Minsk Region\", \"Gomel Region\", \"Vitebsk Region\", \"Brest Region\", \"Mogilev Region\", \"Grodno Region\"])\n\nmaxPrice_df = avgPrice_df[\"Manufacturer Name\"].tail(10)\n\nfor i in range(10):\n    car = maxPrice_df.iloc[i]\n    loclist = [car]\n    j = 0\n    for loc in locx:\n        num = len(cars_df[(cars_df[\"manufacturer_name\"] == car) & (cars_df[\"location_region\"] == loc)].index)\n        num /= locs.iloc[j]\n        num *= 100\n        loclist.append(num)\n        j += 1\n    percent_df.loc[i] = loclist\n\ncar_colors = {'Cadillac':'red', 'Acura':'yellow', 'Buick':'blue', 'Mini':'orange', 'Infiniti':'green', 'Skoda':'purple', 'Land Rover':'grey',\n       'Lexus':'pink', 'Jaguar':'white', 'Porsche':'black'}\n\ndef mapColors():\n    colors = []\n    for i in range(10):\n        colors.append(car_colors[percent_df[\"Manufacturer Name\"].iloc[i]])\n    return colors\n\n\n\ncolor_list = mapColors()\n\nfig_carlocs = make_subplots(rows=2, cols=3,\n                           subplot_titles=(\"Minsk Region\", \"Gomel Region\", \"Vitebsk Region\", \"Brest Region\", \"Mogilev Region\", \"Grodno Region\"),\n                           vertical_spacing = 0.15,\n                           x_title=\"Percent Market Share\",\n                           y_title=\"Luxury Car Manufacturer\",\n                           )\n\ntrace0 = go.Bar(x=percent_df[\"Minsk Region\"], marker=dict(color = color_list), text=percent_df[\"Manufacturer Name\"])\ntrace1 = go.Bar(x=percent_df[\"Gomel Region\"], marker=dict(color = color_list), text=percent_df[\"Manufacturer Name\"])\ntrace2 = go.Bar(x=percent_df[\"Vitebsk Region\"], marker=dict(color = color_list), text=percent_df[\"Manufacturer Name\"])\ntrace3 = go.Bar(x=percent_df[\"Brest Region\"], marker=dict(color = color_list), text=percent_df[\"Manufacturer Name\"])\ntrace4 = go.Bar(x=percent_df[\"Mogilev Region\"], marker=dict(color = color_list), text=percent_df[\"Manufacturer Name\"])\ntrace5 = go.Bar(x=percent_df[\"Grodno Region\"], marker=dict(color = color_list), text=percent_df[\"Manufacturer Name\"])\n\nfig_carlocs.append_trace(trace0, 1, 1)\nfig_carlocs.append_trace(trace1, 1, 2)\nfig_carlocs.append_trace(trace2, 1, 3)\nfig_carlocs.append_trace(trace3, 2, 1)\nfig_carlocs.append_trace(trace4, 2, 2)\nfig_carlocs.append_trace(trace5, 2, 3)\n\n\nfig_carlocs.update_layout(\n    title=\"Percent of Luxury Cars Sold in Each Region\",\n    width=1200,\n    height=650,\n    showlegend=False,\n)\n\n\nfor i in range(1,7):\n    fig_carlocs['layout'][f'yaxis{i}']['showticklabels'] = False\nfig_carlocs.update_xaxes(range=[0, 4.])\n\nfig_carlocs.show()","kernel":"ds_env","output":{"0":{"data":{"iframe":"bc3b1800a33742c582b31bf2ffb0c3e0ecf98893"}}},"pos":21,"start":1656658896552,"state":"done","type":"cell"}
{"cell_type":"code","end":1656660634959,"exec_count":97,"id":"bb9974","input":"box_color = px.box(cars_df, x=\"color\", y=\"price_usd\",\n                   labels={\"color\":\"Car Color\",\"price_usd\":\"Price (USD)\"},\n                   title=\"Color of car vs. Price\", range_y=[0,30000],\n                   color='color',\n                   color_discrete_map={'silver':'lightslategrey','blue':'blue','red':'red', 'black':'black', 'grey':'grey', 'other':'purple',\n                                       'brown':'saddlebrown', 'white':'lightsteelblue', 'green':'green', 'violet':'violet', 'orange':'orange', 'yellow':'yellow'\n                                           }\n                  )\n\nbox_color.update_layout(\n    width = 1100,\n    height = 500,\n    showlegend = False\n)\n\nbox_color.show()","kernel":"ds_env","output":{"0":{"data":{"iframe":"7d0ca4bb59a1ed55c056e5168c14bebd680fe5c7"}}},"pos":25,"start":1656660634598,"state":"done","type":"cell"}
{"cell_type":"code","end":1656660929790,"exec_count":104,"id":"e125ec","input":"x = cars_df['manufacturer_name'].value_counts()\ny, y2=[], []\nfor name in x.index:\n    y.append(cars_df[cars_df[\"manufacturer_name\"] == name]['duration_listed'].mean())\n    y2.append(cars_df[cars_df[\"manufacturer_name\"] == name]['price_usd'].mean())\nz={\n    \"Manufacturer Name\":x.index,\n    \"Average Time (Days)\":y,\n    \"Average Price\":y2\n}\navgPrice_df = pd.DataFrame(data=z)\navgPrice_df.sort_values(by=\"Average Time (Days)\", ascending=True, inplace=True)\n\nbox_manufacturer = px.bar(avgPrice_df, x=\"Manufacturer Name\", y=\"Average Time (Days)\", color=\"Average Price\", color_continuous_scale=\"Bluered\")\nbox_manufacturer.update_layout(\n    title = 'Manufacturer Name VS Average Duration Before Car Sold',\n    width=1100\n)\n\nbox_manufacturer.show()","kernel":"ds_env","output":{"0":{"data":{"iframe":"645d2dd3b1220f94017853f3ab9a0a189d929aa2"}}},"pos":6,"start":1656660929401,"state":"done","type":"cell"}
{"cell_type":"code","end":1656661043344,"exec_count":106,"id":"4ddeda","input":"y=[]\n\nfor i in cars_df[\"price_usd\"]:\n    if(i<=10000):\n        y.append(\"0-10K\")\n    elif(i<=20000):\n        y.append(\"10K-20K\")\n    elif(i<=30000):\n        y.append(\"20K-30K\")\n    elif(i<=40000):\n        y.append(\"30K-40K\")\n    elif(i<=50000):\n        y.append(\"40K-50K\")\n\nz={\n    \"Price(USD)\":y,\n    \"Time\":cars_df['duration_listed'],\n    \"Price\":cars_df['price_usd']\n}\navgPrice_df = pd.DataFrame(data=z)\navgPrice_df.sort_values(by=\"Price(USD)\", ascending=True, inplace=True)\nbox_manufacturer = px.box(avgPrice_df, x=\"Price(USD)\", y=\"Time\", range_y=[0,320])\n\nbox_manufacturer.update_layout(\n    width = 600,\n    height = 450,\n    title = 'Price(USD) VS Time(Days)'\n)\n\nbox_manufacturer.show()","kernel":"ds_env","output":{"0":{"data":{"iframe":"6a11bc0c2d876c8dfb56c813fcf8175eb49c6a96"}}},"pos":8,"start":1656661042932,"state":"done","type":"cell"}
{"cell_type":"code","end":1656661054249,"exec_count":107,"id":"9a5a97","input":"k=[]\n\nfor i in cars_df[\"odometer_value\"]:\n    if(i<=200000):\n        k.append(\"0-200K\")\n    elif(i<=400000):\n        k.append(\"200K-400K\")\n    elif(i<=600000):\n        k.append(\"400K-600K\")\n    elif(i<=800000):\n        k.append(\"600K-800K\")\n    elif(i<=1000000):\n        k.append(\"800K-1000K\")\n\nz={\n    \"Odometer(Kilometers)\":k,\n    \"Time(Days)\":cars_df['duration_listed'],\n    \"Odometer(KM)\":cars_df['odometer_value']\n}\navgPrice_df = pd.DataFrame(data=z)\navgPrice_df.sort_values(by=\"Odometer(KM)\", ascending=True, inplace=True)\nbox_manufacturer = px.box(avgPrice_df, x=\"Odometer(Kilometers)\", y=\"Time(Days)\", range_y=[0,250])\n\nbox_manufacturer.update_layout(\n    width = 600,\n    height = 450,\n    title = 'Odometer VS Duration Before Car Sold'\n)\nbox_manufacturer.show()","kernel":"ds_env","output":{"0":{"data":{"iframe":"c9c491ecc657ccbb92ad0333202f8cba1bfacc7e"}}},"pos":10,"start":1656661053843,"state":"done","type":"cell"}
{"cell_type":"code","end":1656661060159,"exec_count":108,"id":"c8f34c","input":"x = cars_df['body_type'].value_counts()\ny=[]\nfor name in x.index:\n    y.append(cars_df[cars_df[\"body_type\"] == name]['duration_listed'].mean())\nz={\n    \"Body Type\":x.index,\n    \"Average Time(Days)\":y\n}\navgPrice_df = pd.DataFrame(data=z)\n#avgPrice_df.sort_values(by=\"Average Time(Days)\", ascending=True, inplace=True)\nbox_manufacturer = px.bar(avgPrice_df, x=\"Body Type\", y=\"Average Time(Days)\", color=\"Body Type\")\nbox_manufacturer.update_layout(\n    title = 'Body Type VS Average Duration Before Car Sold',\n    width = 600,\n    height = 450,\n    showlegend=False\n)\n\nbox_manufacturer.show()","kernel":"ds_env","output":{"0":{"data":{"iframe":"1175cff9a609a70c8aef856273b1d2d5b86c7abf"}}},"pos":12,"start":1656661059880,"state":"done","type":"cell"}
{"cell_type":"code","end":1656661109198,"exec_count":111,"id":"675c43","input":"sc_yeardrive = px.histogram(cars_df, x=\"year_produced\", y=\"duration_listed\", color=\"drivetrain\",  barmode=\"overlay\", range_x=[1980,2020])\n\nsc_yeardrive.update_layout(\n    width=800,\n    height=500\n)\n\nsc_yeardrive.show()","kernel":"ds_env","output":{"0":{"data":{"iframe":"f823250c8e02ee931b70293a4cee95e5ddbcb762"}}},"pos":14,"start":1656661108719,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":0,"id":"0f0f33","input":"","pos":32,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"406afc","input":"","pos":31,"type":"cell"}
{"cell_type":"code","exec_count":13,"id":"47d192","input":"locs = cars_df[\"location_region\"].value_counts()\nlocx = locs.index\nlocy = []\nfor location in locx:\n    mean = cars_df[cars_df[\"location_region\"] == location][\"price_usd\"].mean()\n    locy.append(mean)\n\nhist_location = px.histogram(x=locx, y=locy,\n                            labels={\n                                \"x\":\"Regions\"\n                            },\n                             title=\"Average Price of Cars in Each Region\")\nhist_location.update_layout(height=500, width=750, yaxis_title=\"Average Price($)\")\nhist_location.show()","output":{"0":{"data":{"iframe":"281452f7e7b3831da8baf0e0002de9eb26c7432e"},"exec_count":13,"output_type":"execute_result"}},"pos":23,"type":"cell"}
{"cell_type":"code","exec_count":16,"id":"9ce56d","input":"box_engine = px.box(cars_df, x=\"body_type\", y=\"price_usd\", color=\"engine_type\",\n                   labels={\n                       \"body_type\":\"Body Type\",\n                       \"engine_type\":\"Engine Type\",\n                       \"price_usd\":\"Price (USD)\"\n                   }, title=\"Body and engine type vs. Price\")\nbox_engine.update_layout(\n    width = 1000\n)\n\nbox_engine.show()","output":{"0":{"data":{"iframe":"c02b9dec6c7af6d7bb61348c24bf358b1a355530"},"exec_count":16,"output_type":"execute_result"}},"pos":29,"type":"cell"}
{"cell_type":"markdown","id":"16f944","input":"This figure represents the listing duration before the car was sold and the price. In comparison, the price and time are not dependent. According to the graph, many cars were sold within 500 days in all price ranges. Plus, the price ranges from $0 to $10K and $10k to $20K, including many cars that were sold after 1000 days. Thus no relationship can be found in the graph. \n\n","pos":9,"type":"cell"}
{"cell_type":"markdown","id":"24203f","input":"# Relationship Between Car Features and Duration Listed\n\n","pos":4,"type":"cell"}
{"cell_type":"markdown","id":"2d2dbf","input":"This figure represents the average car price of each manufacturer. As shown by the figure, the average price is highly dependent on the manufacturer. For example, the average price of Porsche, Jaguar, Lexus, and Land Rover are among the highest average car prices. The difference in prices reflects how manufacturers create different quality products.\n\n","pos":20,"type":"cell"}
{"cell_type":"markdown","id":"47589c","input":"This figure represents the average duration of each manufacturer before the car got sold. As shown in the figure the average time is not very dependent on the manufacturer. For example, some well\\-known manufacturers like Honda, Nissan, and Audi got sold more quicker than Lincoln, Jeep, Acura, and Porsche.\n\n","pos":7,"type":"cell"}
{"cell_type":"markdown","id":"4a5667","input":"# Relationship Between Car Features and Price\n\n","pos":18,"type":"cell"}
{"cell_type":"markdown","id":"4f6760","input":"This data study is centered on the question: Does a car’s specification or manufacture affect the duration of the car’s listing before getting sold? We theorize that a car's specification or manufacturing affects the duration of the car’s listing. We investigated a dataset on how small features like transmission or drivetrain to large specifications like price or odometer value have an effect on the duration of the specific car’s listing. The dataset was collected from Kaggle’s dataset, “Used-cars-catalog”, the survey was scraped in Belarus (western Europe) in December 2019. Below we are describing our findings on the dataset. \n\n","pos":5,"type":"cell"}
{"cell_type":"markdown","id":"5e5028","input":"This figure represents the average prices of cars in the regions they were manufactured in. As shown by the figure, the price in Minsk Region is way higher than the average price of cars manufactured in the other regions. In the aforementioned graphs, there is a higher proportion of luxury cars sold in the Minsk Region than in the others. For example, Skoda\n","pos":24,"type":"cell"}
{"cell_type":"markdown","id":"88baf8","input":"This figure represents the average duration of the listing before the different body\\-type cars got sold. As shown in the graph, the Body type and time are dependent. The graph shows that smaller body types like sedans, hatchbacks, and liftbacks were sold quicker than vans, minibusses, and cabriolets. Even when a relationship is present, there is a weak correlation in the graph. \n\n","pos":13,"type":"cell"}
{"cell_type":"markdown","id":"a43eb1","input":"This figure represents the relationship between the body and engine type of a car and its price. According to the chart, cars with gasoline and diesel engines sell for about the same range of prices, but cars with electric engines tend to have a higher price. Although the cars have similar median prices, some body types, like the liftback, van, or limousine, are sold at lower prices, with medians lower than $10k and the highest price overall being $40k.\n","pos":30,"type":"cell"}
{"cell_type":"markdown","id":"c7c362","input":"This figure represents the proportion of luxury cars sold as a percentage of the total amount of cars sold in each region. According to the figure, the Minsk Region has a higher percentage of luxury cars sold compared to other regions. For example, Jaguar and Skoda cars are sold in a higher proportion in the Minsk Region than in any other region.\n","pos":22,"type":"cell"}
{"cell_type":"markdown","id":"d17784","input":"This figure represents the duration of the listing before the car got sold and the odometer meaning distance traveled in kilometers. In comparison, the odometer and time are not dependent. This graph is very similar to the Price VS Time graph. The graph shows that many cars were sold within 500 days in all odometer ranges. Further, the odometer ranges from 0 to 200K and 200k to 400K, includes many cars that were sold after 1000 days. Therefore there is no correlation in the graph. \n\n","pos":11,"type":"cell"}
{"cell_type":"markdown","id":"e1d5c6","input":"This figure represents the duration of the listing before the cars got sold and the specifications. As shown in the graph, specifications and time are dependent. Let’s look at the transmission part of the graph, cars that had automatic transmission were listed on the market for fewer days compared to mechanical transmission. To add on, let’s look at the drivetrain part, all\\-wheel drive was more rapidly sold than the front or rear\\-wheel drive. Therefore, there is a strong correlation in the graph. \n\n","pos":15,"type":"cell"}
{"cell_type":"markdown","id":"e8c376","input":"The big question is, \"Does a car’s specification or manufacture affect the duration of the car’s listing before getting sold?\" From all the visuals and data, we have seen, we can conclude that many features of a car affect the duration of a listing. Such as the transmission, drivetrain, and body type. We can not identify whether the price, odometer, and manufacturer’s name have a big effect on the duration as the data is spread out for this particular graph. Furthermore, the dataset is biased since the data was obtained in western Europe, not the entire World. ","pos":17,"type":"cell"}
{"cell_type":"markdown","id":"f825ce","input":"This figure represents the prices of cars based on their color. Most of the colors have a similar distribution of prices, but some colors like brown, black, grey, and white have slightly higher median prices. This shows that color is not a major factor in determining a car's price.\n","pos":26,"type":"cell"}
{"cell_type":"markdown","id":"f9f4d3","input":"This figure represents the relation between the price of a car and the year it was produced. Cars are further separated by transmission and drivetrain, and the graph shows that cars with mechanical transmissions were produced earlier and sell for lower prices than cars with automatic transmissions. Additionally, cars with a drivetrain on both the front and rear are more valuable, followed by cars with a rear drivetrain. Cars with front drivetrain generally have the lowest price, despite being the most common type of car, as shown on the histograms.\n","pos":28,"type":"cell"}
{"id":0,"time":1656660708311,"type":"user"}
{"last_load":1656654806196,"type":"file"}